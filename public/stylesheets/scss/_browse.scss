.tote-grid-element{
    &.red button.heart-outer-wrap {
        .heart-wrap .heart .inner-heart{
            &:after, &:before{
                background-color: $darkGrey;
            }
        }

        svg path{
            @include prefix (fill, rgba(60, 60, 60, 1));
        }
    }
    &.white button.heart-outer-wrap {
        .heart-wrap .heart .inner-heart{
            &:after, &:before{
                background-color: $fadedRed;
            }
        }

        svg path{
            @include prefix (fill, rgba(254, 67, 68, 1));
        }

        &.favorited{
            background-color: rgba(255,255,255,0.5);
            .heart-wrap .heart-circle{
                @include calc (width, calc(100% - 4px));
                @include calc (height, calc(100% - 4px));
            }
        }
    }
    &.black button.heart-outer-wrap {
        .heart-wrap .heart .inner-heart{
            &:after, &:before{
                background-color: $grey;
            }
        }
        
        svg path{
            @include prefix (fill, rgba(26, 25, 25, .2));
        }
    }
}

button.heart-outer-wrap{
    padding: 0;

    &:hover{    
        opacity: 1;
    }

    &.favorited{
        .heart-wrap{
            // background-color: $fadedRed;

            .heart {
                @include prefix (transform, scale(1.2));

                .inner-heart{
                    &:after, &:before{
                        background-color: #fff !important;
                        @include prefix (transition, 0.3s 0.2s $easing-curve);
                    }
                }

                svg path{
                    fill: rgba(255,255,255,1);
                }
            }

            .heart-circle{
                width: 100%;
                height: 100%;
                opacity: 1;
            }
        }
    }

    &.white{
        .heart-wrap .heart .inner-heart{
            &:after, &:before{
                background-color: $fadedRed;
            }
        }
        &.favorited{
            background-color: rgba(255,255,255,0.5);

            .heart-wrap .heart-circle{
                @include calc (width, calc(100% - 4px));
                @include calc (height, calc(100% - 4px));
            }
        }
    }
    &.red{
        .heart-wrap .heart .inner-heart{
            &:after, &:before{
                background-color: $darkGrey;
            }
        }
    }
    &.black{
        .heart-wrap .heart .inner-heart{
            &:after, &:before{
                background-color: $grey;
            }
        }
    }
}
.heart-wrap{
    position: relative;
    width: 100%;
    height: 100%;
    @include prefix (border-radius, 50%);
    @include prefix (transition, 0.3s $easing-curve);
    
    display:flex;
    justify-content:center;
    align-items:center;

    .heart{
        @include prefix (transition, 0.5s $heart-curve);
        width: 100%;
        height: 100%;

        svg{
            width: 100%;
            height: 100%;
        }

        .inner-heart{
            width: 100%;
            height: 100%;
            position: relative;
            @include prefix (transition, 0.3s $easing-curve);
            z-index: $z-first-level;
            
            &:after, &:before{
                width: 55%;
                height: 95%;
                position: absolute;
                top: 2px;
                content: "";
                @include prefix (border-top-left-radius, 20px);
                @include prefix (border-top-right-radius, 20px);
                @include prefix (transition, 0.3s $easing-curve);
            }

            &:before{
                left: 0;
                @include prefix (transform, rotate(45deg));
                @include prefix (transform-origin, 100% 100%);
            }
            &:after{
                left: 50%;
                @include prefix (transform, rotate(-45deg));
                @include prefix (transform-origin, 0 100%);
            }
        }
    }
    .heart-circle{
        @include centerAbsV;
        @include centerAbsH;
        width: 2px;
        height: 2px;
        opacity: 0;
        background-color: $fadedRed;
        @include prefix (transition, 0.3s $easing-curve);
        @include prefix (border-radius, 50%);
    }
}

.tote-grid-element{
    display: inline-block;
    float: left;
    width: 25%;
    height: 0;
    padding-bottom: 25%;
    position: relative;

    cursor: pointer;
    overflow: hidden;
    background-color: #ececec;
    @include linear-gradient ( -45deg, #fff, $lightGrey );
    @include prefix (transition, 0.4s $easing-curve);

    &#zoomAnimation{
        position: absolute;
        display: block;
        float: none;
        top: 0;
        left: 0;
        padding-bottom: 0;
        @include prefix (transition, 0s);
        @include prefix (transform-origin, center top);
    }

    &.noAnimate{
        @include prefix (transition, 0s);
    }

    &.black{
        background: $lightestGrey;
    }
    &.red{
        background: $darkGrey;

        .tote-wrap .actual-tote {
            .handle:before{
                background: $darkGrey;
            }

            .bag-bottom .bl-corner, .br-corner{
                border-left-color: $darkGrey;
                border-bottom-color: $darkGrey;
            }
        }
    }
    &.white{
        background: $fadedRed;

        .tote-wrap .actual-tote{
            .handle{
                border: 0;

                &:before{
                    background: $fadedRed;
                    border: 0;
                }
            }
            .bag-body{
                border: 0;
            }
            .bag-bottom {
                .bottom{
                    border: 0;
                }

                .bl-corner, .br-corner{
                    border-left-color: $fadedRed;
                    border-bottom-color: $fadedRed;

                    &:after{
                        background-color: transparent;
                    }
                }
            }
        }
    }
    &.start{
        @include prefix (transform, translateY(100%));
        opacity:0;
    }
    &.no-transition{
        @include prefix (transition, none);
    }
    &.dupe{
        display: block;
        float: none;
        position: absolute;
    }
    // &:after{
    //     content: "";
    //     position: absolute;
    //     top: 0;
    //     left: 0;
    //     width: 100%;
    //     height: 100%;
    //     background-color: #fff;
    //     opacity: 0;
    //     @include prefix (transition, 0.3s $easing-curve);
    //     pointer-events: none;
    // }
    
    &:hover{
        .tote-wrap{
            @include prefix (transform, scale(1.1) translateY(-45%));
            
            .actual-tote .shadow-blur{
                opacity: 1;
            }
        }
        .heart-outer-wrap{
            opacity: 0.8;

            &:hover{
                opacity: 1;
            }
        }
    }

    &.view, &#zoomAnimation{
        &:hover{
            .tote-wrap{
                @include prefix (transform, scale(1) translateY(-50%));
            }
            .heart-outer-wrap{
                opacity: 0;
            }
        }
    }
    
    .heart-outer-wrap{
        position: absolute;
        top: $body-padding-sml;
        right: $body-padding-sml;
        z-index: $z-first-level;
        opacity: 0;

        width: 50px;
        height: 50px;

        &.favorited{
            opacity: 0.85;

            &:hover{
                opacity: 1;
            }
        }

        .heart svg path{
            @include prefix (transition, 0.3s $easing-curve);
            @include prefix (transform, translate3d(12%, 8%, 0) scale(0.65));
        }
    }
    .tote-wrap{
        max-width: 60%;
        @include centerAbsH;
        @include centerAbsV;
        z-index: $z-first-level;

        .actual-tote{
            @include prefix (transition, 0s $easing-curve);
            @include prefix (transform-origin, top center);
            
            .shadow-blur{
                opacity: 0;
                @include prefix (transition, 0.3s $easing-curve);
            }

        }
    }
}

@media screen and (max-width: $lrgBP) {
    .content.browse-page .tote-grid-element{
        width: 33.33%;
        padding-bottom: 33.33%;
    }
}
@media screen and (max-width: $medBP) {
    .content.browse-page .tote-grid-element{
        width: 50%;
        padding-bottom: 50%;
    }
}
@media screen and (max-width: $smlBP) {
    .content.browse-page .tote-grid-element{
        width: 100%;
        padding-bottom: 100%;
    }
}